<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="0" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-18T20:24:07 IST" name="Default suite" finished-at="2025-09-18T20:24:09 IST" duration-ms="1409">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.eq.runner.RunnerTest@24269709]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-09-18T20:24:07 IST" name="Default test" finished-at="2025-09-18T20:24:09 IST" duration-ms="1409">
      <class name="com.eq.runner.RunnerTest">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:com.eq.runner.RunnerTest@24269709]" started-at="2025-09-18T20:24:07 IST" name="setUpClass" finished-at="2025-09-18T20:24:08 IST" duration-ms="1021" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@33aa93c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.eq.runner.RunnerTest@24269709]" started-at="2025-09-18T20:24:09 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-09-18T20:24:09 IST" duration-ms="258" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Valid New Registration"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["SignUp"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'User click on Sign up' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("User click on Sign up")
public void user_click_on_sign_up() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User enter fill new registration form")
public void user_enter_fill_new_registration_form(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@When("User click on create account")
public void user_click_on_create_account() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'User click on Sign up' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("User click on Sign up")
public void user_click_on_sign_up() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User enter fill new registration form")
public void user_enter_fill_new_registration_form(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@When("User click on create account")
public void user_click_on_create_account() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at âœ½.User click on Sign up(file:///D:/Balaji/Company/Equiniti%20Sep%202025%20Java/automation_workspace/BDDFramework/src/test/resources/feature/SignUp.feature:10)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.eq.runner.RunnerTest@24269709]" started-at="2025-09-18T20:24:09 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-09-18T20:24:09 IST" duration-ms="13" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Valid New Registration"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["SignUp"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'User click on Sign up' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("User click on Sign up")
public void user_click_on_sign_up() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User enter fill new registration form")
public void user_enter_fill_new_registration_form(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@When("User click on create account")
public void user_click_on_create_account() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'User click on Sign up' and 2 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("User click on Sign up")
public void user_click_on_sign_up() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User enter fill new registration form")
public void user_enter_fill_new_registration_form(io.cucumber.datatable.DataTable dataTable) {
    // Write code here that turns the phrase above into concrete actions
    // For automatic transformation, change DataTable to one of
    // E, List<E>, List<List<E>>, List<Map<K,V>>, Map<K,V> or
    // Map<K, List<V>>. E,K,V must be a String, Integer, Float,
    // Double, Byte, Short, Long, BigInteger or BigDecimal.
    //
    // For other transformations you can register a DataTableType.
    throw new io.cucumber.java.PendingException();
}
@When("User click on create account")
public void user_click_on_create_account() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at âœ½.User click on Sign up(file:///D:/Balaji/Company/Equiniti%20Sep%202025%20Java/automation_workspace/BDDFramework/src/test/resources/feature/SignUp.feature:10)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:com.eq.runner.RunnerTest@24269709]" started-at="2025-09-18T20:24:09 IST" name="tearDownClass" finished-at="2025-09-18T20:24:09 IST" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.eq.runner.RunnerTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
